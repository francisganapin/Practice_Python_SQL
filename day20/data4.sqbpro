<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:\Users\francis\OneDrive\Desktop\Practice\Practice_python\day20\data4.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="636"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:mainemployees"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="departments" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="43"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="employees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="43"/><column index="3" value="104"/><column index="4" value="48"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="projects" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="98"/><column index="3" value="89"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Sample Schema
CREATE TABLE employees(
	id INTEGER PRIMARY KEY,
	name TEXT,
	department_id INTEGER,
	salary INTEGER
);


INSERT INTO employees (id, name, department_id, salary) VALUES
(1, 'Ana Santos', 101, 42000),
(2, 'Carlos Reyes', 102, 55000),
(3, 'Mira Tan', 101, 48000),
(4, 'Jacob Cruz', 103, 60000),
(5, 'Lara Domingo', 104, 53000);


--Department
CREATE TABLE departments(
	id INTEGER PRIMARY KEY,
	name TEXT
);

INSERT INTO departments (id, name) VALUES
(101, 'Human Resources'),
(102, 'Information Technology'),
(103, 'Finance'),
(104, 'Marketing');


CREATE TABLE projects(
	id INTEGER PRIMARY KEY,
	project_name TEXT,
	employee_id INTEGER

);

INSERT INTO projects(id,project_name,employee_id)VALUES
(1,'Onboarding Revamp',1),
(2,'Networking Upgrade',2),
(3,'Budget Forecasting',4),
(4,'Social Media Campaign',5),
(5,'Data Analysis PipeLine',3);



--Problem:Get Employees who are not assigned to any projects
SELECT e.name
FROM employees e
LEFT JOIN projects p ON e.id = p.employee_id
WHERE p.id IS NULL;


--GET employee name with thier department name
SELECT e.name,d.name AS department
FROM employees e
JOIN departments d ON e.department_id = d.id;

--Get employees with highest salary
SELECT name,salary
FROM employees
WHERE salary = (
	SELECT MAX(salary) FROM employees
);

WITH emp_dept AS(
	SELECT e.name as employees,d.name AS department
	FROM employees e
	JOIN departments d ON e.department_id = d.id
)
SELECT * FROM emp_dept;


--Rank Employees by salary within their department_id
SELECT name,department_id,salary,
	RANK() OVER (PARTITION BY department_id ORDER BY salary DESC) AS rank
FROM employees;


CREATE INDEX idx_salary ON employees(salary);





DELIMITER //
CREATE PROCEDURE give_raise(IN emp_id INT)
BEGIN
    UPDATE employees
    SET salary = salary * 1.10
    WHERE id = emp_id;
END;
//
DELIMITER ;

CALL give_raise(1);


</sql><current_tab id="0"/></tab_sql></sqlb_project>
